buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.0-beta-4584'
  }
}

apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

repositories {
  mavenCentral()
}

dependencies {
  compile 'com.jakewharton.android.repackaged:libcore-dex:2'
  compile 'org.jetbrains.kotlin:kotlin-stdlib:1.0.0-beta-4584'
  testCompile 'junit:junit:4.12'
  testCompile 'com.google.guava:guava:19.0'
  testCompile 'com.google.truth:truth:0.28'
}

task fatJar(type: Jar, dependsOn:'compileJava') {
  from files(sourceSets.main.output.classesDir)
  from configurations.runtime.asFileTree.files.collect { zipTree(it) }

  classifier 'fat'

  manifest {
    attributes 'Main-Class': 'com.jakewharton.dexmethodlist.Main'
  }
}

def execFile = new File(buildDir, 'exec/dex-method-list')
task execJar << {
  def fatJarFile = fatJar.archivePath

  execFile.getParentFile().mkdirs()
  execFile << "#!/bin/sh\n\nexec java -jar \$0 \"\$@\"\n\n"
  fatJarFile.withInputStream { execFile.append it }

  execFile.setExecutable true, false
}
execJar.dependsOn fatJar

tasks.findByName('assemble').dependsOn execJar

artifacts {
  archives file: execFile, name: 'binary', type: 'jar', builtBy: execJar, extension: 'jar', classifier: 'binary'
}
