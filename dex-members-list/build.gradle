apply plugin: 'java-library'
apply plugin: 'org.jetbrains.kotlin.jvm'

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

dependencies {
  implementation deps.clikt
  implementation deps.kotlin.stdlibJdk8

  implementation deps.r8

  // Truth uses a newer version of Guava than R8.
  implementation deps.guava

  implementation project(':diffuse')

  testImplementation deps.junit
  testImplementation deps.truth
}

def fatMembersJarProvider = tasks.register('fatMembersJar', Jar) { task ->
  task.dependsOn(configurations.named('runtimeClasspath'))
  task.dependsOn(tasks.named('compileJava'))

  task.classifier 'fat'

  task.manifest {
    attributes 'Main-Class': 'com.jakewharton.dex.DexMembers'
  }

  task.doFirst {
    task.from files(sourceSets.main.output.classesDirs)
    task.from configurations.runtimeClasspath.asFileTree.files.collect { zipTree(it) }
  }
}

def binaryMembersFile = new File(buildDir, "libs/$archivesBaseName-$version-binary.jar")
def binaryMembersJar = tasks.register('binaryMembersJar') { task ->
  def fatMembersJar = fatMembersJarProvider.get()
  task.dependsOn(fatMembersJar)

  task.inputs.file(fatMembersJar.archivePath)
  task.outputs.file(binaryMembersFile)

  task.doLast {
    def fatJarFile = fatMembersJar.archivePath

    binaryMembersFile.getParentFile().mkdirs()
    binaryMembersFile.delete()
    binaryMembersFile << "#!/bin/sh\n\nexec java -jar \$0 \"\$@\"\n\n"
    fatJarFile.withInputStream { binaryMembersFile.append it }

    binaryMembersFile.setExecutable true, false
  }
}

def copyMembersBinary = tasks.register('copyMembersBinary', Copy) { task ->
  task.from(binaryMembersFile)
  task.into buildDir
  task.rename(".*", 'dex-member-list')
}

tasks.named('assemble').configure { task ->
  task.dependsOn(copyMembersBinary)
}

artifacts {
  archives file: binaryMembersFile, name: 'binary', type: 'jar', builtBy: binaryMembersJar, classifier: 'binary'
}

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
